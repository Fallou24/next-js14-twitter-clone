// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id           String    @id @map("_id")
  userImageUrl String
  username     String    @unique
  fullName     String
  bio          String?
  coverImg     String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  post         Post[]
  Like         Like[]
  follower     Follows[] @relation("followedBy")
  following    Follows[] @relation("following")

  @@map("profile")
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  likes     Like[]
  parentId  String?  @db.ObjectId
  parent    Post?    @relation("postReplies", fields: [parentId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  reply     Post[]   @relation("postReplies")
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("likes")
}

model Follows {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String
  followingId String
  following   Profile  @relation("following", fields: [followingId], references: [id])
  follower    Profile  @relation("followedBy", fields: [followerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("follow")
}
